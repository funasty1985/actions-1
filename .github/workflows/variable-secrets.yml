name: Exploring variables and Secrets

on: 
  push 

# jobs:
#   docker: 
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Docker Build
#         run:  docker build -t docker.io/dockerUsername/imageName:latest

#       - name: Docker Login
#         run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

#       - name: Docker Publish
#         run: docker push docker.io/dockerUsername/imageName:latest
  
#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest
      


########################## environment variables at STEP level ##########################
# jobs:
  # docker: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Build
  #       env: 
  #         CONTAINER_REGISTRY: docker.io
  #         DOCKER_USERNAME: siddharth1
  #         IMAGE_NAME:  github-actions-nginx
  #       run: echo dcoker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

  #     - name: Docker Login
  #       env:
  #         DOCKER_PASSWORD: s3cUrePaSsw0rd
  #         DOCKER_USERNAME: siddharth1
  #       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

  #     - name: Docker Publish
  #       env:
  #         CONTAINER_REGISTRY: docker.io
  #         DOCKER_USERNAME: siddharth1
  #         IMAGE_NAME:  github-actions-nginx
  #       # another syntax to retrieve env variable
  #       run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # deploy:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Run
  #       env:
  #         CONTAINER_REGISTRY: docker.io
  #         DOCKER_USERNAME: siddharth1
  #         IMAGE_NAME:  github-actions-nginx
  #       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


########################## environment variables at JOB level ##########################
# jobs:  
  # docker:
  #   env:
  #       CONTAINER_REGISTRY: docker.io
  #       DOCKER_USERNAME: siddharth1
  #       IMAGE_NAME:  github-actions-nginx
  #   runs-on: ubtuntu-latest
  #   steps:
  #     - name: Docker Build
  #       run: echo dcoker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

  #     - name: Docker Login
  #       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

  #     - name: Docker Publish
  #       run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # deploy:
  #   env:
  #     CONTAINER_REGISTRY: docker.io
  #     DOCKER_USERNAME: siddharth1
  #     IMAGE_NAME:  github-actions-nginx
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Run
  #       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest 

########################## environment variables at WORKFLOW level ##########################
env:
    CONTAINER_REGISTRY: docker.io
    DOCKER_USERNAME: siddharth1
    IMAGE_NAME:  github-actions-nginx 

jobs:
  docker:
    runs-on: ubtuntu-latest
    steps:
      - name: Docker Build
        run: echo dcoker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

      - name: Docker Login
        run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - name: Docker Publish
        run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Docker Run
        run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest